{"version":3,"sources":["testData.js","components/DonutChart/SliceComponent.jsx","components/DonutChart/DonutComponent.jsx","components/BarChart/BarChart.jsx","components/LineChart/LineChart.jsx","App.js","serviceWorker.js","index.js"],"names":["donutChartData","group","measure","barChartData","category","lineChartData","animateSlice","sliceRef","slice","innerRadius","outerRadius","el","select","current","arcFinal3","arc","startAngle","endAngle","transition","duration","attr","sliceTextStyle","fontSize","fontFamily","fontWeight","SliceComponent","props","React","createRef","_useState","useState","_useState2","Object","slicedToArray","hoveredSlice","setHoveredSlice","_useState3","_useState4","unHoveredSlice","setUnHoveredSlice","index","value","fill","label","onClickSlice","sliceArc","useEffect","react_default","a","createElement","onClick","onMouseEnter","onMouseLeave","ref","d","transform","concat","centroid","Math","PI","angle","dy","textAnchor","style","donutTextStyle","DonutComponent","x","y","onChangeGroup","donutTitle","setDonutTitle","textFill","setTextFill","_useState5","_useState6","selectedCount","setSelectedCount","colorScale","scaleOrdinal","schemeCategory10","data","pieChart","pie","sort","measures","map","item","DonutChart_SliceComponent","key","barTextStyle","barTitleTextStyle","Bar","rectRef","countTextRef","width","height","colour","count","animateRect","round","BarChart","positionX","positionY","selectedGroup","barColour","barChartHeight","selectedData","filter","datum","categoriesLabel","groupsLabel","scaleLinear","domain","max","range","bars","BarChart_Bar","lineTitleTextStyle","lineSubTitleTextStyle","animateDots","xScale","yScale","dotsContainer","dotsColour","dotsCoords","dots","selectAll","each","i","this","minValue","min","apply","maxValue","fillColour","getDotColour","Dots","dotsRef","r","floor","Line","lineColour","lineRef","currentLine","newLinePath","line","lineDefinition","amimateLine","strokeWidth","LineChart","margin","length","LineChart_Line","LineChart_Dots","App","setSelectedGroup","groupColour","setGroupColour","textAlign","background","padding","marginBottom","viewBox","preserveAspectRatio","DonutChart_DonutComponent","components_BarChart_BarChart","components_LineChart_LineChart","Boolean","window","location","hostname","match","ReactDOM","render","src_App","welcomeText","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6fe5a9c.chunk.js","sourcesContent":["const donutChartData = [\n    {group: \"Sanusi\", measure: 0.30},\n    {group: \"Rabiu\", measure: 0.25},\n    {group: \"Kabiru\", measure: 0.15},\n    {group: \"Ahmad\", measure: 0.05},\n    {group: \"Yusuf\", measure: 0.18},\n    {group: \"Bello\", measure:0.04},\n    {group: \"Salis\", measure: 0.03}\n];\n\nconst barChartData = [\n    { group: \"All\", category: \"Oranges\", measure: 63850.4963 }, \n    { group: \"All\", category: \"Apples\", measure: 78258.0845 }, \n    { group: \"All\", category: \"Grapes\", measure: 60610.2355 }, \n    { group: \"All\", category: \"Bananas\", measure: 30493.1686 }, \n    { group: \"All\", category: \"Mangoes\", measure: 56097.0151 }, \n    { group: \"Sanusi\", category: \"Oranges\", measure: 19441.5648 }, \n    { group: \"Sanusi\", category: \"Apples\", measure: 25922.0864 }, \n    { group: \"Sanusi\", category: \"Grapes\", measure: 9720.7824 }, \n    { group: \"Sanusi\", category: \"Bananas\", measure: 6480.5216 }, \n    { group: \"Sanusi\", category: \"Mangoes\", measure: 19441.5648 }, \n    { group: \"Rabiu\", category: \"Oranges\", measure: 22913.2728 }, \n    { group: \"Rabiu\", category: \"Apples\", measure: 7637.7576 }, \n    { group: \"Rabiu\", category: \"Grapes\", measure: 23549.7526 }, \n    { group: \"Rabiu\", category: \"Bananas\", measure: 1909.4394 }, \n    { group: \"Rabiu\", category: \"Mangoes\", measure: 7637.7576 }, \n    { group: \"kabiru\", category: \"Oranges\", measure: 1041.5124 }, \n    { group: \"Kabiru\", category: \"Apples\", measure: 2430.1956 }, \n    { group: \"Kabiru\", category: \"Grapes\", measure: 15275.5152 }, \n    { group: \"Kabiru\", category: \"Bananas\", measure: 4166.0496 }, \n    { group: \"Kabiru\", category: \"Mangoes\", measure: 11803.8072 }, \n    { group: \"Ahmad\", category: \"Oranges\", measure: 7406.3104 }, \n    { group: \"Ahmad\", category: \"Apples\", measure: 2545.9192 }, \n    { group: \"Ahmad\", category: \"Grapes\", measure: 1620.1304 }, \n    { group: \"Ahmad\", category: \"Bananas\", measure: 8563.5464 }, \n    { group: \"Ahmad\", category: \"Mangoes\", measure: 3008.8136 }, \n    { group: \"Yusuf\", category: \"Oranges\", measure: 7637.7576 }, \n    { group: \"Yusuf\", category: \"Apples\", measure: 35411.4216 }, \n    { group: \"Yusuf\", category: \"Grapes\", measure: 8332.0992 }, \n    { group: \"Yusuf\", category: \"Bananas\", measure: 6249.0744 }, \n    { group: \"Yusuf\", category: \"Mangoes\", measure: 11803.8072 }, \n    { group: \"Bello\", category: \"Oranges\", measure: 3182.399 }, \n    { group: \"Bello\", category: \"Apples\", measure: 867.927 }, \n    { group: \"Bello\", category: \"Grapes\", measure: 1808.18125 }, \n    { group: \"Bello\", category: \"Bananas\", measure: 795.59975 }, \n    { group: \"Bello\", category: \"Mangoes\", measure: 578.618 }, \n    { group: \"Salis\", category: \"Oranges\", measure: 2227.6793 }, \n    { group: \"Salis\", category: \"Apples\", measure: 3442.7771 }, \n    { group: \"Salis\", category: \"Grapes\", measure: 303.77445 }, \n    { group: \"Salis\", category: \"Bananas\", measure: 2328.93745 }, \n    { group: \"Salis\", category: \"Mangoes\", measure: 1822.6467 }, \n];\n\nconst lineChartData = [\n    { group: \"All\", category: 2018, measure: 289309 }, \n    { group: \"All\", category: 2019, measure: 234998 }, \n    { group: \"All\", category: 2020, measure: 310900 }, \n    { group: \"All\", category: 2021, measure: 223900 }, \n    { group: \"All\", category: 2012, measure: 234500 }, \n    { group: \"Sanusi\", category: 2018, measure: 81006.52 }, \n    { group: \"Sanusi\", category: 2019, measure: 70499.4 }, \n    { group: \"Sanusi\", category: 2020, measure: 96379 }, \n    { group: \"Sanusi\", category: 2021, measure: 64931 }, \n    { group: \"Sanusi\", category: 2012, measure: 70350 }, \n    { group: \"Rabiu\", category: 2018, measure: 63647.98 }, \n    { group: \"Rabiu\", category: 2019, measure: 61099.48 }, \n    { group: \"Rabiu\", category: 2020, measure: 87052 }, \n    { group: \"Rabiu\", category: 2021, measure: 58214 }, \n    { group: \"Rabiu\", category: 2012, measure: 58625 }, \n    { group: \"Ahmad\", category: 2018, measure: 23144.72 }, \n    { group: \"Ahmad\", category: 2019, measure: 14099.88 }, \n    { group: \"Ahmad\", category: 2020, measure: 15545 }, \n    { group: \"Ahmad\", category: 2021, measure: 11195 }, \n    { group: \"Ahmad\", category: 2012, measure: 11725 }, \n    { group: \"Kabiru\", category: 2018, measure: 34717.08 }, \n    { group: \"Kabiru\", category: 2019, measure: 30549.74 }, \n    { group: \"Kabiru\", category: 2020, measure: 34199 }, \n    { group: \"Kabiru\", category: 2021, measure: 33585 }, \n    { group: \"Kabiru\", category: 2012, measure: 35175 }, \n    { group: \"Yusuf\", category: 2018, measure: 69434.16 }, \n    { group: \"Yusuf\", category: 2019, measure: 46999.6 }, \n    { group: \"Yusuf\", category: 2020, measure: 62180 }, \n    { group: \"Yusuf\", category: 2021, measure: 40302 }, \n    { group: \"Yusuf\", category: 2012, measure: 42210 }, \n    { group: \"Bello\", category: 2018, measure: 7232.725 }, \n    { group: \"Bello\", category: 2019, measure: 4699.96 }, \n    { group: \"Bello\", category: 2020, measure: 6218 }, \n    { group: \"Bello\", category: 2021, measure: 8956 }, \n    { group: \"Bello\", category: 2012, measure: 9380 }, \n    { group: \"Salis\", category: 2018, measure: 10125.815 }, \n    { group: \"Salis\", category: 2019, measure: 7049.94 }, \n    { group: \"Salis\", category: 2020, measure: 9327 }, \n    { group: \"Salis\", category: 2021, measure: 6717 }, \n    { group: \"Salis\", category: 2012, measure: 7035 }\n];\n\nexport {donutChartData, barChartData, lineChartData}","import React, { useState, useEffect } from \"react\";\nimport { arc } from \"d3-shape\";\nimport { select } from \"d3\";\n\n\nconst animateSlice = (sliceRef, slice, innerRadius, outerRadius) => {\n    const el = select(sliceRef.current);\n    const arcFinal3 = arc()\n        .innerRadius(innerRadius)\n        .outerRadius(outerRadius)\n        .startAngle(slice.startAngle)\n        .endAngle(slice.endAngle);\n    el.select(\"path\")\n        .transition()\n        .duration(600)\n        .attr(\"d\", arcFinal3);\n};\n\nconst sliceTextStyle = {\n  fontSize: \"1px\",\n  fontFamily: \"verdana\",\n  fontWeight: \"bold\"\n};\n\nconst SliceComponent = props => {\n    const sliceRef = React.createRef();\n    const [hoveredSlice, setHoveredSlice] = useState(null);\n    const [unHoveredSlice, setUnHoveredSlice] = useState(null);\n\n    const angle = value => {\n        let a = ((value.startAngle + value.endAngle) * 90) / Math.PI - 90;\n        return a > 90 ? a - 180 : a;\n    };\n\n    const outerRadius = 15;\n    const innerRadius = (outerRadius / 2);\n  \n    const { index, value, fill, label, onClickSlice } = props;\n\n    const sliceArc = arc()\n        .innerRadius(innerRadius)\n        .outerRadius(outerRadius);\n    \n    useEffect(() => {\n        if (hoveredSlice !== null) {\n            const selectedInnerRadius = (outerRadius * 0.40);\n            animateSlice(sliceRef, hoveredSlice, selectedInnerRadius, outerRadius);\n       } \n       setUnHoveredSlice(null);\n    }, [hoveredSlice, sliceRef]);\n\n    useEffect(() => {\n        if (unHoveredSlice !== null) {\n            animateSlice(sliceRef, unHoveredSlice, innerRadius, outerRadius);\n        }\n        setHoveredSlice(null);\n    }, [unHoveredSlice, sliceRef, innerRadius]);\n    \n    return (\n    <g\n      onClick={()=> onClickSlice(label, fill, value)}\n      onMouseEnter={() => setHoveredSlice(value)}\n      onMouseLeave={() => setUnHoveredSlice(value)}\n      ref={sliceRef}\n      index={index}>\n      <path d={sliceArc(value)} fill={fill} />\n      <text\n        transform={`translate(${sliceArc.centroid(value)}) rotate(${angle(\n          value\n        )})`}\n        dy=\".35em\"\n        textAnchor=\"middle\"\n        fill=\"white\"\n        style={sliceTextStyle}>\n        {label}\n      </text>\n    </g>\n  );\n};\n\nexport default SliceComponent;\n","import React, { useState } from 'react';\nimport { scaleOrdinal } from \"d3-scale\";\nimport { pie } from \"d3-shape\";\nimport { schemeCategory10 } from 'd3';\n\nimport { donutChartData } from '../../testData';\nimport SliceComponent from './SliceComponent';\n\nconst donutTextStyle = {\n    fontSize: \"2px\", \n    fontFamily: \"verdana\", \n    fontWeight: \"bold\"\n};\n\nconst DonutComponent = (props) => {\n\n    const {x, y, onChangeGroup} = props;\n    \n    //react hooks\n    const [donutTitle, setDonutTitle] = useState('');\n    const [textFill, setTextFill] = useState('');\n    const [selectedCount, setSelectedCount] = useState('');\n    \n    //slices d3 color definition\n    const colorScale = scaleOrdinal(schemeCategory10);\n\n    //main function responding to a click on a slice\n    const onClickSlice = (label, fill, value) => {\n        setDonutTitle(label);\n        setSelectedCount(value.data);\n        setTextFill(fill);\n        onChangeGroup(label, fill);\n    }\n\n    //wrapper function for the pie chart to \n    //render slices as ReactJs components\n    const renderSlice = (measure) => {\n        const index = measure.index;\n        return(\n        <SliceComponent \n            key={index}\n            index={index}\n            value={measure}\n            label={donutChartData[index].group}\n            fill={colorScale(index)}\n            onClickSlice={onClickSlice}/>\n        );\n    };\n\n    //creation of the pie\n    let pieChart = pie().sort(null);\n    //creation of the data array from test data\n    const measures = donutChartData.map(item => item.measure);\n\n    return(\n        <g transform={`translate(${x}, ${y})`}>\n          {pieChart(measures).map(renderSlice)}\n        <text\n            x=\"0\"\n            y=\"-1.5em\"\n            textAnchor=\"middle\"\n            style={donutTextStyle}\n            fill={textFill}>\n        {donutTitle && <tspan dy=\"1em\" x=\"0.3em\">{donutTitle} </tspan>}\n        {selectedCount && <tspan dy=\"1.5em\" x=\"0.3em\">{selectedCount * 100}%</tspan>}\n        </text>\n        </g>\n    )\n}\n\nexport default DonutComponent\n","import React, { useEffect } from 'react';\nimport { scaleLinear, max, select } from 'd3';\nimport { barChartData } from '../../testData';\n\nconst animateRect = (rectRef, height, colour, countTextRef) => {\n    const rect = select(rectRef.current);\n    rect.transition()\n        .duration(650)\n        .attr(\"height\", (height + 0.5) )\n        .attr(\"fill\", colour)\n    const text = select(countTextRef.current);\n    text.transition()\n        .duration(650)\n        .attr(\"y\", ((4 + height) * -1));\n};\n\nconst barTextStyle = {\n    fontSize: \"1px\", \n    fontFamily: \"verdana\"\n}\n\nconst barTitleTextStyle = {\n    fontSize: \"2px\",\n    fontFamily: \"verdana\",\n    fontWeight: \"bold\"\n}\n\nconst Bar = (props) => {\n    const rectRef = React.createRef();\n    const countTextRef = React.createRef();\n    const { x, y, width, height, colour, count } = props;\n\n    useEffect(() => {\n        animateRect(rectRef, height, colour, countTextRef);\n    });\n\n    return(\n    <g>\n        <rect x={x} y={y + 5} width={width} ref={rectRef}/>\n        <text x={x + 3.9} \n              transform=\"scale(1, -1)\" \n              fill=\"white\"\n              textAnchor=\"middle\" \n              style={barTextStyle}\n              ref={countTextRef}>{Math.round(count)}</text>\n    </g>\n    )\n}\n\n//wrapper function for the bar chart to \n//render bars as ReactJs components\nconst BarChart = (props) => {\n    const { positionX, positionY, height, selectedGroup, barColour } = props;\n\n    const margin = {top: 20, right: 20, bottom: 30, left: 45};\n    const barChartHeight = height - margin.top - margin.bottom;\n\n    const selectedData = barChartData.filter((datum) =>  datum.group === selectedGroup);\n    \n    //labels that will appear under the bars (Oranges, Apples, etc.)\n    const categoriesLabel = selectedData.map((datum, index) => \n    <text \n        key={index}\n        x={(index * 8) + 3.9} \n        y={-3.5} \n        textAnchor=\"middle\" \n        transform={`scale(1, -1)`}\n        style={barTextStyle}>\n        {datum.category}\n    </text>);\n\n    //Title above the bar chart\n    const groupsLabel = (\n    <text \n        x={6} \n        y={-34} \n        textAnchor=\"start\" \n        transform={`scale(1, -1)`}\n        style={barTitleTextStyle}>\n        {selectedData[0].group} Sales Breakdown 2022\n    </text>);\n\n    //d3 function that sizes the bars height according to data range    \n    const y = scaleLinear()\n        .domain([0, max(selectedData, (d) => d.measure)])\n        .range([barChartHeight, 0]);\n    \n    //creation of bars components\n    const bars = selectedData.map((datum, index) => \n    <Bar \n        key={index} \n        x={index * 8} \n        y={0} \n        width={7.8} \n        height={(barChartHeight - y(datum.measure)) / 2} \n        colour={barColour} \n        count={datum.measure} />)\n    \n    return (\n    <g transform={`translate(${positionX}, ${positionY}) scale(1, -1)`}>\n        { groupsLabel }\n        { bars }\n        { categoriesLabel }\n    </g>\n    );\n}\n\nexport default BarChart;","import React, { useEffect } from 'react';\nimport { scaleLinear, max, line, select } from 'd3';\nimport { lineChartData } from '../../testData';\n\nconst lineTitleTextStyle = {\n    fontSize: \"8px\", \n    fontFamily: \"verdana\",\n    fontWeight: \"bold\"\n};\n\nconst lineSubTitleTextStyle = {\n    fontSize: \"2px\", \n    fontFamily: \"verdana\",\n    fontWeight: \"bold\",\n}\n\nconst amimateLine = (xScale, yScale, currentLine, lineColour, selectedData) => {\n\n    const lineDefinition = line()\n            .x((d, i) => xScale(i) * 0.10)\n            .y(d => yScale(d.measure) * 0.10);\n    \n    const newLinePath = lineDefinition(selectedData);\n\n    currentLine.transition()\n        .duration(650)\n        .attr(\"d\", newLinePath)\n        .attr(\"stroke\", lineColour)\n};\n\nconst animateDots = (xScale, yScale, dotsContainer, dotsColour, selectedData) => {\n\n    const dotsCoords = selectedData.map( (item, index) => { return {x: (xScale(index) * 0.10), y: (yScale(item.measure) * 0.10)}});\n    \n    const dots = dotsContainer.selectAll('circle');\n\n    const getDotColour = index => {\n        const measures = selectedData.map(item => item.measure);\n        const minValue = Math.min.apply( null, measures);\n        const maxValue = Math.max.apply( null, measures);\n        let fillColour = \"white\";\n        if (measures[index] === minValue) { fillColour = \"red\" }\n        else if(measures[index] === maxValue) { fillColour = \"green\" }\n        return fillColour\n    }\n    \n    dots.each(function (d, i) {\n        select(this)\n        .transition()\n        .duration(650)\n        .attr(\"cx\", dotsCoords[i].x)\n        .attr(\"cy\", dotsCoords[i].y)\n        .attr(\"fill\", getDotColour(i))\n        .attr(\"stroke\", dotsColour)\n        .attr(\"stroke-width\", 0.150)\n        });\n}\n\nconst Dots = (props) => {\n\n    const {xScale, yScale, dotsColour, selectedData } = props;\n\n    /*the ref is created on the <g> group 'container' element, being \n    Dots a component that holds multiple svg elements*/\n    const dotsRef = React.createRef();\n\n    useEffect(() => {\n        const dotsContainer = select(dotsRef.current);\n        animateDots(xScale, yScale, dotsContainer, dotsColour, selectedData);\n    });\n    \n    //here we create the svg elements array\n    const dots = selectedData.map((item, index) => <circle key={index} r={0.3}><title>{`${item.category}: ${Math.floor(item.measure)}`}</title></circle>);\n\n    return(\n        <g ref={dotsRef}>\n            {dots}\n        </g>\n\n    );\n};\n\nconst Line = (props) => {\n\n    const { xScale, yScale, lineColour, selectedData} = props;\n    const lineRef = React.createRef();\n\n    useEffect(() => {\n        const currentLine = select(lineRef.current);\n        amimateLine(xScale, yScale, currentLine, lineColour, selectedData);\n    });\n\n    return(\n        <g>\n            <path ref={lineRef} strokeWidth=\"0.3\" fill=\"none\"/>\n        </g>\n\n    );\n};\n\nconst LineChart = (props) =>  {\n\n    const { selectedGroup, lineColour, positionX, positionY } = props;\n    const margin  = {top: 20, right: 10, bottom: 0, left: 50};\n    const selectedData = lineChartData.filter((datum) =>  datum.group === selectedGroup);\n    const width = 500 - margin.left - margin.right;\n    const height = 150 - margin.top - margin.bottom;\n    \n    //the scaling functions (xScale, yScale) are common for both components\n    const xScale = scaleLinear()\n    .domain([0, selectedData.length - 1])\n    .range([0, width]);\n\n    const yScale = scaleLinear()\n        .domain([0, max(selectedData, d => d.measure)])\n        .range([height, 0]);\n\n\n    return(\n        <g transform={`translate(${positionX}, ${positionY})`}>\n            <text textAnchor=\"middle\" style={lineSubTitleTextStyle} fill=\"black\" x={22} y={-2}>Sale Performance 2022</text>\n            <text textAnchor=\"middle\" style={lineTitleTextStyle} fill=\"grey\" x={22} y={8}>{selectedData[selectedData.length -1].measure}</text>\n            <Line xScale={xScale} yScale={yScale} lineColour={lineColour} selectedData={selectedData}/>\n            <Dots  xScale={xScale} yScale={yScale} dotsColour={lineColour} selectedData={selectedData} />\n        </g>);\n\n};\n\nexport default LineChart;","import React, { useState } from 'react';\nimport DonutComponent from './components/DonutChart/DonutComponent';\nimport BarChart from './components/BarChart/BarChart';\nimport LineChart from './components/LineChart/LineChart';\n\nconst App = (props) => {\n\n  // React hooks with common state values for all components \n  const [selectedGroup, setSelectedGroup] = useState('All');\n  const [groupColour, setGroupColour] = useState('lightgrey');\n\n  //function that will hook into the state to change it \n  function updateBarChart(group, colour) {\n    setSelectedGroup(group);\n    setGroupColour(colour);\n  }\n\n//header styles\nconst headerStyle = {\n  fontSize: '40px',\n  fontFamily: 'sans',\n  textAlign: 'center',\n  background: 'lightBlue',\n  padding: '10px',\n  marginBottom: '2rem'\n}\n  //footer styles\nconst footerStyle = {\n    fontSize: '15px',\n    fontFamily: 'segoe',\n    textAlign: 'center',\n    background: 'lightBlue',\n    padding: '10px'\n}\n\n  return(\n  <div>\n    <header style={headerStyle}>SUSI COMPANY SALES PERFORMANCE</header>\n    <svg viewBox=\"-2 0 100 50\" preserveAspectRatio=\"xMidYMid meet\"> \n      <DonutComponent x={15} y={20} onChangeGroup={updateBarChart}/>\n      <BarChart positionX={35} positionY={50} width={80} height={100} selectedGroup={selectedGroup} barColour={groupColour}/>\n      <LineChart positionX={35} positionY={4} selectedGroup={selectedGroup} lineColour={groupColour} />\n    </svg>\n    <footer style={footerStyle}>&copy; 2022 Sanusi Abdulkadir<br/>Software Engineer</footer>\n  </div>\n  );\n\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n        <App welcomeText=\"Welcome to React\"/>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}